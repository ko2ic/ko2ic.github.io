<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Spring-boot | ko2ic Blog]]></title>
  <link href="http://ko2ic.github.io/blog/categories/spring-boot/atom.xml" rel="self"/>
  <link href="http://ko2ic.github.io/"/>
  <updated>2014-07-05T03:04:29+09:00</updated>
  <id>http://ko2ic.github.io/</id>
  <author>
    <name><![CDATA[Koji Ishii]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Spring BootとDropwizardのアプリコード比較]]></title>
    <link href="http://ko2ic.github.io/blog/2014/06/29/springboot-dropwizard/"/>
    <updated>2014-06-29T21:54:04+09:00</updated>
    <id>http://ko2ic.github.io/blog/2014/06/29/springboot-dropwizard</id>
    <content type="html"><![CDATA[<p>Spring BootとDropwizardの比較をQiitaに記述しました。</p>

<p>ソースの比較をするとSpring Bootの方が記述量も少なくて優れているように思えます。  <br/>
しかし、実際はDropwizardでは迷うことがなく実装ができ、Spring Bootでは悩むことが多かったです。  <br/>
そうなったのはおそらく、Spring Bootは多機能で色々なことができるため、調べるのが大変なのとAuto Configurationがわかりづらいくさせているように思えます。(もちろんこれはこれで便利です)</p>

<p>Springに関しては元々大好きなフレームワークの一つで、1.0時代から3まで仕事で利用し、Spring MVC, Spring Web Flow, Spring Batch, Spring Securityなど多くのSpringプロダクトを利用していました。
しかし、5年くらい利用していないので忘れている部分もあるかもしれませんが、「こんなにめんどくさかったっけ？」と感じました。</p>

<p>ただ、この感覚は単純にDropwizardの得意な分野で比較したのと、Spring自体を忘れているだけなのかもしれません。
慣れくるとSpring Bootは機能も多く、ホットデプロイもできるので、こちらの方が良くなるかもしれません。</p>

<p>しかし、いま現在の率直な感想を書くと   <br/>
RESTfulなアプリを早くシンプルに作るのであれば、自分だったらDropwizardを採用します。  <br/>
ソースもシンプルでわかり易く拡張もしやすいように感じます。        <br/>
(いまの時代、単体テストという面だけでいうとDIである必要もあまりないと思っています。)</p>

<p>Qiitaに書きました</p>

<p><a href="http://qiita.com/ko2ic/items/742fe630246848137c20">http://qiita.com/ko2ic/items/742fe630246848137c20</a></p>
]]></content>
  </entry>
  
</feed>
