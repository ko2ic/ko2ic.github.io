<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ko2ic Blog]]></title>
  <link href="http://ko2ic.github.io/atom.xml" rel="self"/>
  <link href="http://ko2ic.github.io/"/>
  <updated>2014-05-20T22:15:45+09:00</updated>
  <id>http://ko2ic.github.io/</id>
  <author>
    <name><![CDATA[Koji Ishii]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mac環境構築手順]]></title>
    <link href="http://ko2ic.github.io/blog/2014/05/20/mac-env-init2/"/>
    <updated>2014-05-20T20:43:42+09:00</updated>
    <id>http://ko2ic.github.io/blog/2014/05/20/mac-env-init2</id>
    <content type="html"><![CDATA[<p>前回は、手動での作業を書いたので、今日は半自動な構築部分を残しておきます。</p>

<h2>Macportsからhomebrewへ</h2>

<p>ずーとmacportsを使っていたのですが、homebrew-caskで.dmgなアプリも自動で入れたいので、今更ですが乗り換えました。</p>

<p>macportsにも利点があって、それは「/optにすべてがインストールされる」に集約されると思います。
例えば
* ディレクトリrsyncすれば他のmacと共通の環境ができる
* 問題が起きたときなどにoptをrenameしてみて、入れ直したり、元に戻したりが気楽にできる
* /usr/localは自分で入れたものにしかない状態はわかりやすい</p>

<p>こういった利点があるので変えていなかったのですが、その利点を余りあるほどcaskが便利そうだと思ったので乗り換えました。</p>

<p>この記事ではすでにgithubで管理しているBrewfileを使うので細かい説明は書きません。（そこら中に記事があるので自分が書く必要もないので） <br/>
よって完全に自分のためだけのメモになります。</p>

<h2>dotfiles</h2>

<p>${HOME}に.bash_profileなどの自分用の設定をおきます。</p>

<pre><code>$ git clone https://github.com/ko2ic/dotfiles.git
$ cd dotfiles
$ chmod 766 dotfiles.sh
$ ./dotfiles.sh
$ source ~/.bash_profile
</code></pre>

<h2>Xcode</h2>

<ul>
<li>App StoreからXcodeを検索してインストール</li>
<li>Xcodeを起動して同意する</li>
<li><code>$ xcode-select -install</code>でCommand Line Toolをインストール</li>
</ul>


<h2>homebrew &amp; cask</h2>

<p>Brewfileに記述したアプリをインストールします。</p>

<pre><code>$ ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
$ brew bundle
</code></pre>

<h2>NeoBundle</h2>

<pre><code>$ curl https://raw.githubusercontent.com/Shougo/neobundle.vim/master/bin/install.sh | sh
$ vim .
:NeoBundleInstall
</code></pre>

<h2>Git Settings</h2>

<pre><code>$ git config --global user.name "kouji ishii"
$ git config --global user.email ko2ic.dev@gmail.com
$ git config --global core.excludesfile ~/.gitignore
$ git config --global core.editor "/usr/local/bin/vim"
</code></pre>

<h2>Screen</h2>

<p>縦分割できるScreenを使いたいので個別に入れます。</p>

<pre><code>$ brew install --HEAD -f screen
</code></pre>

<h2>アプリ設定</h2>

<h4>Alfred</h4>

<p>ホットキーをaltのダブルタップに変更する</p>

<p><img src="http://ko2ic.github.io/images/mac-env-init/alfred.png" alt="alfred" /></p>

<h4>divvy</h4>

<p>以下のURLのように設定をする</p>

<p><a href="http://mizage.com/help/accessibility.html">http://mizage.com/help/accessibility.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac環境構築手順(GUI編)]]></title>
    <link href="http://ko2ic.github.io/blog/2014/05/18/mac-env-init/"/>
    <updated>2014-05-18T19:20:40+09:00</updated>
    <id>http://ko2ic.github.io/blog/2014/05/18/mac-env-init</id>
    <content type="html"><![CDATA[<p>macをクリーンインストールすることになったので、環境構築を自分用の備忘録として残しておきます。<br/>
基本的に自分が使いやすいようにしています。</p>

<h2>このページで書かないこと</h2>

<ul>
<li>homebrew-caskやdotfileなど自動でできること</li>
</ul>


<h2>このページで書くこと</h2>

<ul>
<li>GUIで設定すること</li>
<li>defaultsコマンドで設定すること</li>
</ul>


<h4>defaultsコマンドについて</h4>

<p>defaultsコマンドは「plist」と呼ばれるアプリやシステムの設定ファイルに、設定値を追加、変更、削除、検索するコマンドで以下のファイルが変更されます。</p>

<pre><code>~/Library/Preferences/~.plist
</code></pre>

<p>以下のコマンドで上記のファイルを表示します</p>

<pre><code>defaults read キー名
</code></pre>

<p>以下でキーに対応する値を削除できる<br>
但しキー自体は削除されないのでplistファイル自体を削除します。</p>

<pre><code>defaults delete キー名
</code></pre>

<p>それぞれの隠し機能のコマンドで変更した場合は以下のように再起動をして反映させましょう。</p>

<pre><code>killall Finder
killall Dock
</code></pre>

<!-- more -->


<h2>キーボード</h2>

<p>システム環境設定　→　キーボード　→　</p>

<h4>capsキー変更（日本語キーボード）</h4>

<p>macは、windowsでのショートカットで利用するCtrlの役割がcommandになる。<br/>
（例：command+C コピー）<br>
windowsのCtrlの位置がmacのcapsの位置にあるので、同じ配置でできるように変更する</p>

<p>→　修飾キー<br>　
Caps Lock を Commandに変更</p>

<p><img src="http://ko2ic.github.io/images/mac-env-init/keyboard-caps-change.png" alt="caps" /></p>

<h4>ファンクションキーの動作を変更</h4>

<p>デフォルトでは以下の動作になるために逆になるように変更する</p>

<ul>
<li>F1キーだけを押下するとディスプレイが暗くなる</li>
<li>fnキー+F1でファンクションキーの動作</li>
</ul>


<p>→　F1、F2などの・・・にチェックを入れる</p>

<p><img src="http://ko2ic.github.io/images/mac-env-init/keyboard-function-key.png" alt="function" /></p>

<h2>トラッックパッド</h2>

<p>システム環境設定　→　トラックバッド　→</p>

<p>画像のようにすると使いやすい
<img src="http://ko2ic.github.io/images/mac-env-init/trackpad1.png" alt="trackpad1" />
<img src="http://ko2ic.github.io/images/mac-env-init/trackpad2.png" alt="trackpad2" /></p>

<h2>Finder</h2>

<p>Finder →　環境設定　→　詳細</p>

<h4>拡張子を表示</h4>

<p>「すべてのファイル名拡張子を表示」をチェック</p>

<h4>確実にごみ箱を空にする</h4>

<p>チェックする</p>

<h4>検索実行時の検索対象を変更</h4>

<p>「検索実行時」を「現在のフォルダ内を検索」</p>

<p><img src="http://ko2ic.github.io/images/mac-env-init/finder1.png" alt="finder" /></p>

<h4>新規Finderで開く先を変更</h4>

<p>一般タブで「新規Finderウィンドウで次を表示」でホームを選択する</p>

<h4>隠しファイルを表示する</h4>

<p>デフォルトではFinder上で「.」ファイルは不可視なのでこれを変更する</p>

<pre><code>defaults write com.apple.finder AppleShowAllFiles -boolean true
</code></pre>

<h4>終了できるようにする</h4>

<p>デフォルトではFinderに終了がないのでこれを変更する</p>

<pre><code>defaults write com.apple.finder QuitMenuItem -bool true
</code></pre>

<h4>タイトルにフルパスを表示する</h4>

<p>ウインドウタイトルにもパスを表示する</p>

<pre><code>defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
</code></pre>

<h4>ネットワーク上に.DS_Storeを作らない</h4>

<p>Mac OS Xでは、フォルダの表示形式を変更すると「.DS_Store」という不可視ファイルができるが、これをネットワーク上には作らなくする</p>

<pre><code>defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool YES
</code></pre>

<h2>Dock</h2>

<p> システム環境設定→　Dock</p>

<h4>Dockを自動で隠す</h4>

<p><img src="http://ko2ic.github.io/images/mac-env-init/dock.png" alt="Dock" /></p>

<h4>隠しているアプリを半透明で表示する</h4>

<pre><code>defaults write com.apple.Dock showhidden -boolean true
</code></pre>

<h2>Mission Control</h2>

<p> システム環境設定→　Mission Control</p>

<p><img src="http://ko2ic.github.io/images/mac-env-init/mission-control.png" alt="mission" /></p>

<h4>ダッシュボードを起動させない</h4>

<pre><code>defaults write com.apple.dashboard mcx-disabled -boolean YES
</code></pre>

<h2>その他</h2>

<h4>残バッテリーを表示する</h4>

<p><img src="http://ko2ic.github.io/images/mac-env-init/percent.png" alt="battery" /></p>

<h4>HardDiskが遅いので早くしたい</h4>

<p>Spotlightのインデックス作成が、頻繁に行われているため、HDDが一杯になってくると、かなり遅くなります。<br>
Spotlightを使っていないなら、下記の手順でインデックス作成をしないようにすれば、緩和されます。<br>
「システム環境設定」→「Spotlight」→「プライバシー」で、除するパスを指定すると、インデックスの作成はされなくなりますが、Alfredはこのインデックスを利用しているので考えて設定しましょう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipse MarketPlaceに自作のPluginを登録する]]></title>
    <link href="http://ko2ic.github.io/blog/2014/04/24/octoeclipse-marketplace/"/>
    <updated>2014-04-24T02:45:41+09:00</updated>
    <id>http://ko2ic.github.io/blog/2014/04/24/octoeclipse-marketplace</id>
    <content type="html"><![CDATA[<p>自作のEclipse Pluginの登録は簡単です。</p>

<h2>Eclipse.org accountのアカウントを作成する</h2>

<p>以下のサイトから辿ってサインアップする。(login → Create Account)  <br/>
<a href="http://marketplace.eclipse.org/">http://marketplace.eclipse.org/</a></p>

<p>アカウント作成するとメールが来るので本登録を終わらせて、ログインする.</p>

<h2>コンテンツを追加する</h2>

<p>1.ログイン後のメニューに「Add Content」があるのでそれを叩く。
2.「Add a new Solutions Listing」リンクを叩く。
3. 登録するPluginの情報を記述</p>

<p>Solution Name　: Eclipse MarketPlaceに表示される名前   <br/>
Product URL　:　プロジェクトのURLとか、自分はgithubレポジトリのURLを書いた   <br/>
Version: Eclipse MarketPlaceに表示されるバージョン   <br/>
Update Site URL: 自分はbintrayに作ったのでそのURL   <br/>
Supported Eclipse Version: 例えば 4.3.2   <br/>
Feature IDs: 以下のid</p>

<figure class='code'><figcaption><span>feature.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;feature</span> <span class="na">url=</span><span class="s">&quot;path/to/feature.jar&quot;</span> <span class="na">id=</span><span class="s">&quot;feature.to.install&quot;</span> <span class="na">version=</span><span class="s">&quot;1.x.x.x&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Support URL: issue tracking systemのURL。自分はgithubのissues   <br/>
Status : Eclipse MarketPlaceに表示されるDevelopment Status   <br/>
Solution Type : This product requires an existing Eclipse installation to functionをチェック   <br/>
Solution Description : Eclipse MarketPlaceに表示される説明   <br/>
Categories : タグ。5個まで   <br/>
Markets : 検索対象のマーケット</p>

<p>saveボタンで終了。</p>

<h2>審査とMy Marketplaceに表示されるのを待つ</h2>

<p>これは一日以上待った気がする。上記save後のメッセージなどが地味なので、本当にsaveできたのかが不安になるが、待っていれば、登録される。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自動生成したJavaコードに手を加えても綺麗にマージしてくれるJmerge]]></title>
    <link href="http://ko2ic.github.io/blog/2014/04/23/jmerge/"/>
    <updated>2014-04-23T22:25:51+09:00</updated>
    <id>http://ko2ic.github.io/blog/2014/04/23/jmerge</id>
    <content type="html"><![CDATA[<p>8年くらい前にお世話になっていた会社で「おじさんplugin」というJavaコードを自動生成するEclipse Pluginがありました。<br/>
コードの自動生成ツールはよく見たのですが、このPluginは他とはレベルが違う完成度でした。<br/>
そう感じた理由の一つに、生成したコードを手修正しても綺麗にマージしてくれるからです。（当時見たときは衝撃的でした） <br/>
最近、自動生成するPluginのある仕事をやっているので、同じようにできないかを試してみました。</p>

<p>自動生成したコードに手を加えたい場合、Generation Gapパターンを使うことが多いと思います。<br/>
しかし、Eclipse Modeling Framework(EMF)のJmergeを使えば、自動生成したコードを直接修正してもうまいことマージしてくれます。</p>

<p>例えば、以下のようにjavadocコメントの@generatedがあるメソッドは自動生成で上書きされます。   <br/>
逆に@generatedを消したり、noneをつけるとそのメソッドの内容が上書きされず、修正した内容がそのまま残ります。これはメソッドだけでなく、フィールドでも同じ動作をします。</p>

<figure class='code'><figcaption><span>元々の自動生成コード</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * method1.&lt;br/&gt;</span>
</span><span class='line'><span class="cm"> * @generated</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">method1</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;a&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * method2.&lt;br/&gt;</span>
</span><span class='line'><span class="cm"> * @generated</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">method2</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;a&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>その後に手修正したコード</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * method1.&lt;br/&gt;</span>
</span><span class='line'><span class="cm"> * @generated</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">method1</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;あ&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * method2.&lt;br/&gt;</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">method2</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;あ&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>もう一度自動生成させたコード</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * method1.&lt;br/&gt;</span>
</span><span class='line'><span class="cm"> * @generated</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">method1</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;a&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * method2.&lt;br/&gt;</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">method2</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;あ&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p>この機能を扱うクラスはEMFにあるので、eclipseにEMFを入れておく必要があります。  <br/>
Eclipseのupdate site で、例えば、<code>Kepler - http://download.eclipse.org/releases/kepler</code>を選択して、Modeling → 「EMF &ndash; Eclipse Modeling Framework SDK」をチェックしてインストールします。</p>

<h1>merge ruleを記述</h1>

<p>どのようにマージするかのルールはxmlで記述します。  <br/>
これを始めから作成するのは大変なので、
eclipseディレクトリの   <br/>
./plugins/org.eclipse.emf.codegen.ecore_d.d.d.vyyyyMMdd-dddd.jarの./templates/emf-merge.xmlを使います。以下がデフォルトです。</p>

<figure class='code'><figcaption><span>emf-merge.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;merge:options</span>
</span><span class='line'>  <span class="na">indent=</span><span class="s">&quot;  &quot;</span>
</span><span class='line'>  <span class="na">braceStyle=</span><span class="s">&quot;matching&quot;</span>
</span><span class='line'>  <span class="na">redirect=</span><span class="s">&quot;Gen&quot;</span>
</span><span class='line'>  <span class="na">block=</span><span class="s">&quot;\s*@\s*generated\s*NOT\s*(?:\n\r?|\r\n?)&quot;</span>
</span><span class='line'>  <span class="na">noImport=</span><span class="s">&quot;\s*//\s*import\s+([\w.*]*)\s*;\s*(?:\n\r?|\r\n?)&quot;</span>
</span><span class='line'>  <span class="na">xmlns:merge=</span><span class="s">&quot;http://www.eclipse.org/org/eclipse/emf/codegen/jmerge/Options&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- Tabbed Standard</span>
</span><span class='line'>
</span><span class='line'><span class="c">  indent=&quot;&amp;#x9;&quot;  </span>
</span><span class='line'><span class="c">  braceStyle=&quot;standard&quot;  </span>
</span><span class='line'>
</span><span class='line'><span class="c">--&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- this accepts both new and old style markup. --&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;merge:dictionaryPattern</span>
</span><span class='line'>    <span class="na">name=</span><span class="s">&quot;modelMembers&quot;</span>
</span><span class='line'>    <span class="na">select=</span><span class="s">&quot;Member/getComment&quot;</span>
</span><span class='line'>    <span class="na">match=</span><span class="s">&quot;@\s*(model)&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;merge:dictionaryPattern</span>
</span><span class='line'>    <span class="na">name=</span><span class="s">&quot;generatedUnmodifiableMembers&quot;</span>
</span><span class='line'>    <span class="na">select=</span><span class="s">&quot;Member/getComment&quot;</span>
</span><span class='line'>    <span class="na">match=</span><span class="s">&quot;@\s*(gen)erated\s*(This field/method[^(?:\n\r?|\r\n?)]*)*(?:\n\r?|\r\n?)&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;merge:dictionaryPattern</span>
</span><span class='line'>    <span class="na">name=</span><span class="s">&quot;generatedModifiableMembers&quot;</span>
</span><span class='line'>    <span class="na">select=</span><span class="s">&quot;Member/getComment&quot;</span>
</span><span class='line'>    <span class="na">match=</span><span class="s">&quot;@\s*generated\s*(modifiable)\s*(?:\n\r?|\r\n?)&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- This is like the above, but for backward compatibility --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:dictionaryPattern</span>
</span><span class='line'>    <span class="na">name=</span><span class="s">&quot;generatedLastGenMembers&quot;</span>
</span><span class='line'>    <span class="na">select=</span><span class="s">&quot;Member/getComment&quot;</span>
</span><span class='line'>    <span class="na">match=</span><span class="s">&quot;@\s*(lastgen).*(?:\n\r?|\r\n?)&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;merge:dictionaryPattern</span>
</span><span class='line'>    <span class="na">name=</span><span class="s">&quot;orderedMembers&quot;</span>
</span><span class='line'>    <span class="na">select=</span><span class="s">&quot;Member/getComment&quot;</span>
</span><span class='line'>    <span class="na">match=</span><span class="s">&quot;@\s*(ordered)\s*(?:\n\r?|\r\n?)&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- Only push Annotations for the Members marked by gen--&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:push</span> <span class="na">targetParentMarkup=</span><span class="s">&quot;^gen$&quot;</span> <span class="na">select=</span><span class="s">&quot;Annotation&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceMarkup=</span><span class="s">&quot;^modifiable$&quot;</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;Member/getComment&quot;</span>
</span><span class='line'>    <span class="na">sourceTransfer=</span><span class="s">&quot;(\s*&amp;lt;!--\s*begin-user-doc.*?end-user-doc\s*--&gt;\s*)(?:\n\r?|\r\n?)&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^modifiable$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;Member/setComment&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceMarkup=</span><span class="s">&quot;^gen$&quot;</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;Member/getComment&quot;</span>
</span><span class='line'>    <span class="na">sourceTransfer=</span><span class="s">&quot;(\s*&amp;lt;!--\s*begin-user-doc.*?end-user-doc\s*--&gt;\s*)(?:\n\r?|\r\n?)&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^gen$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;Member/setComment&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;Member/getFlags&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^gen$&quot;</span>
</span><span class='line'>    <span class="na">equals=</span><span class="s">&quot;Member/getName&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;Member/setFlags&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceMarkup=</span><span class="s">&quot;^gen$&quot;</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;AbstractType/getComment&quot;</span>
</span><span class='line'>    <span class="na">sourceTransfer=</span><span class="s">&quot;(\s*&amp;lt;!--\s*begin-user-doc.*?end-user-doc\s*--&gt;\s*)(?:\n\r?|\r\n?)&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^modifiable$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;AbstractType/setComment&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;Type/getTypeParameters&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^lastgen$|^gen$|^modifiable$|^model$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;Type/setTypeParameters&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;Type/getSuperclass&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^lastgen$|^gen$|^modifiable$|^model$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;Type/setSuperclass&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;Type/getSuperInterfaces&quot;</span>
</span><span class='line'>    <span class="na">sourceTransfer=</span><span class="s">&quot;(\s*@\s*extends|\s*@\s*implements)(.*?)(?:&amp;lt;!--|(?:\n\r?|\r\n?))&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^lastgen$|^gen$|^modifiable$|^model$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;Type/addSuperInterface&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;Enum/getSuperInterfaces&quot;</span>
</span><span class='line'>    <span class="na">sourceTransfer=</span><span class="s">&quot;(\s*@\s*extends|\s*@\s*implements)(.*?)(?:&amp;lt;!--|(?:\n\r?|\r\n?))&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^lastgen$|^gen$|^modifiable$|^model$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;Enum/addSuperInterface&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;EnumConstant/getArguments&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^lastgen$|^gen$|^modifiable$|^model$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;EnumConstant/setArguments&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;EnumConstant/getBody&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^lastgen$|^gen$|^modifiable$|^model$$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;EnumConstant/setBody&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;AnnotationTypeMember/getType&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^gen$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;AnnotationTypeMember/setType&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;AnnotationTypeMember/getDefaultValue&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^gen$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;AnnotationTypeMember/setDefaultValue&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;Initializer/getBody&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^gen$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;Initializer/setBody&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;Field/getType&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^gen$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;Field/setType&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;Field/getInitializer&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^gen$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;Field/setInitializer&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;Method/getTypeParameters&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^gen$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;Method/setTypeParameters&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;Method/getReturnType&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^gen$|^model$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;Method/setReturnType&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;Method/getParameters&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^gen$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;Method/setParameters&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;Method/getBody&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^gen$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;Method/setBody&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:pull</span>
</span><span class='line'>    <span class="na">sourceGet=</span><span class="s">&quot;Method/getExceptions&quot;</span>
</span><span class='line'>    <span class="na">targetMarkup=</span><span class="s">&quot;^gen$&quot;</span>
</span><span class='line'>    <span class="na">targetPut=</span><span class="s">&quot;Method/addException&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;merge:sweep</span> <span class="na">markup=</span><span class="s">&quot;^gen$&quot;</span> <span class="na">select=</span><span class="s">&quot;Member&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:sweep</span> <span class="na">markup=</span><span class="s">&quot;^org.eclipse.emf.ecore.EMetaObject$&quot;</span> <span class="na">select=</span><span class="s">&quot;Import&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:sweep</span> <span class="na">markup=</span><span class="s">&quot;^org.eclipse.emf.ecore.impl.EMetaObjectImpl$&quot;</span> <span class="na">select=</span><span class="s">&quot;Import&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:sweep</span> <span class="na">markup=</span><span class="s">&quot;^org.eclipse.emf.ecore.util.EObjectCompositeEList$&quot;</span> <span class="na">select=</span><span class="s">&quot;Import&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:sweep</span> <span class="na">markup=</span><span class="s">&quot;^org.eclipse.emf.ecore.util.EObjectCompositeWithInverseEList$&quot;</span> <span class="na">select=</span><span class="s">&quot;Import&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:sweep</span> <span class="na">markup=</span><span class="s">&quot;^org.eclipse.emf.common.util.AbstractEnumerator$&quot;</span> <span class="na">select=</span><span class="s">&quot;Import&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;merge:sort</span> <span class="na">markup=</span><span class="s">&quot;^ordered$&quot;</span> <span class="na">select=</span><span class="s">&quot;Field&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;merge:sort</span> <span class="na">markup=</span><span class="s">&quot;^ordered$&quot;</span> <span class="na">select=</span><span class="s">&quot;EnumConstant&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- Basic Rules</span>
</span><span class='line'>
</span><span class='line'><span class="c">    &lt;merge:pull </span>
</span><span class='line'><span class="c">      sourceGet=&quot;CompilationUnit/getHeader&quot;</span>
</span><span class='line'><span class="c">      targetPut=&quot;CompilationUnit/setHeader&quot;/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">    &lt;merge:pull </span>
</span><span class='line'><span class="c">      sourceGet=&quot;Package/getName&quot;</span>
</span><span class='line'><span class="c">      targetPut=&quot;Package/setName&quot;/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">    &lt;merge:pull </span>
</span><span class='line'><span class="c">      sourceGet=&quot;Member/getFlags&quot;</span>
</span><span class='line'><span class="c">      targetPut=&quot;Member/setFlags&quot;/&gt;</span>
</span><span class='line'><span class="c">    &lt;merge:pull </span>
</span><span class='line'><span class="c">      sourceGet=&quot;Member/getComment&quot;</span>
</span><span class='line'><span class="c">      targetPut=&quot;Member/setComment&quot;/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">    &lt;merge:pull </span>
</span><span class='line'><span class="c">      sourceGet=&quot;Type/getSuperclass&quot;</span>
</span><span class='line'><span class="c">      targetPut=&quot;Type/setSuperclass&quot;/&gt;</span>
</span><span class='line'><span class="c">    &lt;merge:pull </span>
</span><span class='line'><span class="c">      sourceGet=&quot;Type/getSuperInterfaces&quot;</span>
</span><span class='line'><span class="c">      targetPut=&quot;Type/addSuperInterface&quot;/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">    &lt;merge:pull </span>
</span><span class='line'><span class="c">      sourceGet=&quot;Initializer/getBody&quot;</span>
</span><span class='line'><span class="c">      targetPut=&quot;Initializer/setBody&quot;/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">    &lt;merge:pull </span>
</span><span class='line'><span class="c">      sourceGet=&quot;Field/getType&quot;</span>
</span><span class='line'><span class="c">      targetPut=&quot;Field/setType&quot;/&gt;</span>
</span><span class='line'><span class="c">    &lt;merge:pull </span>
</span><span class='line'><span class="c">      sourceGet=&quot;Field/getInitializer&quot;</span>
</span><span class='line'><span class="c">      targetPut=&quot;Field/setInitializer&quot;/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">    &lt;merge:pull </span>
</span><span class='line'><span class="c">      sourceGet=&quot;Method/getBody&quot;</span>
</span><span class='line'><span class="c">      targetPut=&quot;Method/setBody&quot;/&gt;</span>
</span><span class='line'><span class="c">    &lt;merge:pull </span>
</span><span class='line'><span class="c">      sourceGet=&quot;Method/getReturnType&quot;</span>
</span><span class='line'><span class="c">      targetPut=&quot;Method/setReturnType&quot;/&gt;</span>
</span><span class='line'><span class="c">    &lt;merge:pull </span>
</span><span class='line'><span class="c">      sourceGet=&quot;Method/getExceptions&quot;</span>
</span><span class='line'><span class="c">      targetPut=&quot;Method/addException&quot;/&gt;</span>
</span><span class='line'><span class="c">--&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- Push Enum Constants only for generated Enums --&gt;</span>
</span><span class='line'><span class="c">&lt;!-- </span>
</span><span class='line'><span class="c">  &lt;merge:push targetParentMarkup=&quot;^gen$&quot; select=&quot;EnumConstant&quot;/&gt;</span>
</span><span class='line'><span class="c">--&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- Push Annotation Type Members only for generated Annotation Types --&gt;</span>
</span><span class='line'><span class="c">&lt;!--</span>
</span><span class='line'><span class="c">  &lt;merge:push targetParentMarkup=&quot;^gen$&quot; select=&quot;AnnotationTypeMember&quot;/&gt;</span>
</span><span class='line'><span class="c">--&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- Sets the content of annotations if the parent is marked with gen --&gt;</span>
</span><span class='line'><span class="c">&lt;!--</span>
</span><span class='line'><span class="c">    &lt;merge:pull </span>
</span><span class='line'><span class="c">      sourceGet=&quot;Annotation/getContents&quot;</span>
</span><span class='line'><span class="c">      targetParentMarkup=&quot;^gen$&quot;</span>
</span><span class='line'><span class="c">      targetPut=&quot;Annotation/setContents&quot;/&gt;</span>
</span><span class='line'><span class="c">--&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- Remove annotations of generated target nodes if the annotation is not in the source --&gt;</span>
</span><span class='line'><span class="c">&lt;!--</span>
</span><span class='line'><span class="c">  &lt;merge:sweep parentMarkup=&quot;^gen$&quot; select=&quot;Annotation&quot;/&gt;</span>
</span><span class='line'><span class="c">--&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- </span>
</span><span class='line'><span class="c">    &lt;merge:pull </span>
</span><span class='line'><span class="c">      sourceMarkup=&quot;^modifiable$&quot;</span>
</span><span class='line'><span class="c">      sourceGet=&quot;Member/getComment&quot;</span>
</span><span class='line'><span class="c">      targetMarkup=&quot;^gen$&quot;</span>
</span><span class='line'><span class="c">      targetPut=&quot;Member/setComment&quot;/&gt;</span>
</span><span class='line'><span class="c">--&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/merge:options&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>マージするクラスを作成する</h1>

<p>String merge(String source, String target);を使えば、マージされた結果を返してくれます。</p>

<figure class='code'><figcaption><span>EclipseJavaMerger.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">EclipseJavaMerger</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">final</span> <span class="n">JMerger</span> <span class="n">merger</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JMerger</span><span class="o">(</span><span class="n">buildMergeRule</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">merge</span><span class="o">(</span><span class="n">String</span> <span class="n">source</span><span class="o">,</span> <span class="n">String</span> <span class="n">target</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">target</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">source</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">merger</span><span class="o">.</span><span class="na">setSourceCompilationUnit</span><span class="o">(</span><span class="n">merger</span><span class="o">.</span><span class="na">createCompilationUnitForContents</span><span class="o">(</span><span class="n">source</span><span class="o">));</span>
</span><span class='line'>            <span class="n">merger</span><span class="o">.</span><span class="na">setTargetCompilationUnit</span><span class="o">(</span><span class="n">merger</span><span class="o">.</span><span class="na">createCompilationUnitForContents</span><span class="o">(</span><span class="n">target</span><span class="o">));</span>
</span><span class='line'>            <span class="n">merger</span><span class="o">.</span><span class="na">merge</span><span class="o">();</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">merger</span><span class="o">.</span><span class="na">getTargetCompilationUnitContents</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">merger</span><span class="o">.</span><span class="na">reset</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">JControlModel</span> <span class="nf">buildMergeRule</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">JControlModel</span> <span class="n">controlModel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JControlModel</span><span class="o">();</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">configFileUri</span> <span class="o">=</span> <span class="n">getClass</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="s">&quot;/emf-merge.xml&quot;</span><span class="o">).</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>        <span class="n">controlModel</span><span class="o">.</span><span class="na">initialize</span><span class="o">(</span><span class="k">new</span> <span class="n">ASTFacadeHelper</span><span class="o">(),</span> <span class="n">configFileUri</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">controlModel</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>実際に動作確認をしたい</h1>

<p>この動作を確認したい場合は、Eclipse Marketで、Comment Tag Genを検索してください。（試しに作ってみました）</p>

<p>スプレッドシートからenumクラスなどを自動生成するpluginになります。</p>

<p>以下のプロジェクトで動作させてください。ここにあるスプレッドシートを使えば、自動生成されます。
<a href="https://github.com/ko2ic/comment-tag-gen-plugin-sample">https://github.com/ko2ic/comment-tag-gen-plugin-sample</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipseプラグインを簡単に作成する]]></title>
    <link href="http://ko2ic.github.io/blog/2014/04/23/tycho/"/>
    <updated>2014-04-23T03:35:07+09:00</updated>
    <id>http://ko2ic.github.io/blog/2014/04/23/tycho</id>
    <content type="html"><![CDATA[<p>いまの時代、Eclipse Pluginは簡単に作れます。昔はプロジェクトを作ること自体が難しい（めんどくさい）イメージがあり、ハードルが高かったのですが、いまはtychoがあります。
<a href="https://www.eclipse.org/tycho/">https://www.eclipse.org/tycho/</a></p>

<p>tychoを使えば、プロジェクト作成、build、依存性管理などをある程度自動化できます。
ある程度と言ったのは、まだまだ依存性解決に関しては、うまく動作しない（tycho 0.20.0）ことがあり、手作業が必要になるからです。</p>

<p>依存性を完全に手作業でやるとしたら、以下のサイトのを使って下さい。プロジェクト作成、署名付きjar,featureなどリリースための作業が自動化されます。
<a href="https://github.com/open-archetypes/tycho-eclipse-plugin-archetype">https://github.com/open-archetypes/tycho-eclipse-plugin-archetype</a></p>

<p>依存性もある程度任せたいと思うなら、以下の方法で可能です。</p>

<!-- more -->


<h2>プロジェクトの作成</h2>

<h3>archetypeを選択</h3>

<p>まずは、実験用にforkしたcatalogがあるので、そこから作成します。　　</p>

<pre><code>$ mvn archetype:generate -DarchetypeCatalog=https://raw.githubusercontent.com/ko2ic/maven-catalog/master/snapshots/archetype-catalog.xml
</code></pre>

<p>このとき気をつけることは、バージョンを必ず、major.minor.rivisonと3桁にすることです。
こうしないとpackageできません。</p>

<h3>Eclpseファイルの作成</h3>

<p>今回は、m2eを使わないで環境構築します。
(m2eを使っても今のところjarの依存性管理が効いてくれません。rootのpom.xmlの管理ができる・プロジェクト作成が楽など、m2eを使う意味はあります)</p>

<pre><code>$ mvn eclipse:eclipse
</code></pre>

<p>その後Eclipseにソースを取り込みます</p>

<h3>mvn eclipse:eclipse後にやる作業</h3>

<p>META-INF/MANIFEST.MFのBundle-VersionがSNAPSHOTに変わってしまっているので、qualifierに戻す
（これをしないとpackageできない）</p>

<h2>jarの追加</h2>

<h3>依存性を追加</h3>

<p>例えば、</p>

<pre><code>&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;
    &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;
    &lt;version&gt;3.10-FINAL&lt;/version&gt;
  &lt;/dependency&gt;
&lt;/dependencies&gt;
</code></pre>

<p>その後</p>

<pre><code>$ mvn eclipse:eclipse
</code></pre>

<h3>META-INF/MANIFEST.MFの修正</h3>

<p>コンパイルは通っているが、packageしたときに依存jarがパッケージされないので、修正する <br/>
Build ConfigurationでBinary Buildに依存させたいjarをチェックする。(RuntimeのClasspathにあるjarをチェックすればよい)</p>

<h2>Packageing</h2>

<pre><code>$ mvn package -Psing
</code></pre>

<p>これで、siteプロジェクトのtargetにzipファイルが出来上がります。 <br/>
中身を確認して、coreのjarの直下に依存jarが入っていれば、成功です。</p>

<h2>その他</h2>

<p>Eclipse上、邪魔なjarが表示されているのですが、packagingされないので気にしなくて良いです。 <br/>
気になる場合は、削除しても構いませんが、<code>mvn eclipse:ecipse</code>をすると再度追加されてしまいます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OctopressのサイドバーにQiitaに投稿した人気記事を表示させる方法]]></title>
    <link href="http://ko2ic.github.io/blog/2014/04/21/octopress-qiita-aside/"/>
    <updated>2014-04-21T21:19:01+09:00</updated>
    <id>http://ko2ic.github.io/blog/2014/04/21/octopress-qiita-aside</id>
    <content type="html"><![CDATA[<h2>方法</h2>

<p>1.Qiitaと同じアイコンを使いたいので、<a href="http://fortawesome.github.io/Font-Awesome/">Font Awesome</a>を使う。</p>

<p>今回は、CDNを使うが、ダウンロードして配置してもよい。</p>

<figure class='code'><figcaption><span>./source/_includes/custom/head.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>2./source/_includes/custom/asidesに本体を記述する</p>

<p>Qiitaに人気の投稿を取得するAPIがないので、全記事を取得してソートしています。</p>

<figure class='code'><figcaption><span>qiita.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>
</span><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'><span class="nt">&lt;h1&gt;</span>Qiita 人気の投稿<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'><span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">&quot;qiita_post&quot;</span> <span class="na">class=</span><span class="s">&quot;post&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">.</span><span class="nx">getJSON</span><span class="p">(</span><span class="s2">&quot;https://qiita.com/api/v1/users/ko2ic/items&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">response</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>        <span class="err">#</span> <span class="err">全投稿を取得して人気順に並び替える</span>
</span><span class='line'>        <span class="nx">response</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">){</span>
</span><span class='line'>          <span class="nx">a</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">stock_count</span><span class="p">;</span>
</span><span class='line'>          <span class="nx">b</span> <span class="o">=</span> <span class="nx">b</span><span class="p">.</span><span class="nx">stock_count</span><span class="p">;</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">b</span> <span class="o">-</span> <span class="nx">a</span><span class="p">;</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">response</span><span class="p">.</span><span class="nx">length</span> <span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">response</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">aTag</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;&lt;a/&gt;&quot;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">title</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">,</span><span class="nx">data</span><span class="p">.</span><span class="nx">url</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">iStockTag</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;&lt;i/&gt;&quot;</span><span class="p">).</span><span class="nx">css</span><span class="p">({</span><span class="s2">&quot;color&quot;</span><span class="o">:</span><span class="s2">&quot;#000&quot;</span><span class="p">,</span><span class="s2">&quot;margin-right&quot;</span><span class="o">:</span><span class="s2">&quot;1em&quot;</span><span class="p">}).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span><span class="s2">&quot;fa fa-folder-o&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">iStockTag</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;  &quot;</span> <span class="o">+</span> <span class="nx">data</span><span class="p">.</span><span class="nx">stock_count</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">iCommentTag</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;&lt;i/&gt;&quot;</span><span class="p">).</span><span class="nx">css</span><span class="p">({</span><span class="s2">&quot;color&quot;</span><span class="o">:</span><span class="s2">&quot;#000&quot;</span><span class="p">}).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span><span class="s2">&quot;fa fa-folder-o&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">iCommentTag</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;  &quot;</span> <span class="o">+</span> <span class="nx">data</span><span class="p">.</span><span class="nx">comment_count</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">pTag</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;&lt;p/&gt;&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">pTag</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">iStockTag</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">pTag</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">iCommentTag</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">liTag</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;&lt;li/&gt;&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span><span class="s2">&quot;post&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-qiita-stock&quot;</span><span class="p">,</span><span class="nx">data</span><span class="p">.</span><span class="nx">stock_count</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">aTag</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">pTag</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#qiita_post&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">liTag</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="err">#</span> <span class="err">指定した投稿数だけ表示する</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="nx">i</span> <span class="o">===</span> <span class="p"></span> <span class="o">-</span> <span class="mi">1</span><span class="p">){</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<ol>
<li>./_config.ymlに記述する</li>
</ol>


<figure class='code'><figcaption><span>_config.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>qiita_user: user_name
</span><span class='line'>qiita_display_count: 5
</span><span class='line'>
</span><span class='line'>default_asides:[custom/asides/qiita.html]
</span></code></pre></td></tr></table></div></figure>


<h2>まとめ</h2>

<p>全記事を取得しているので、投稿数が多い場合はパフォーマンスが悪くなると思います。<br/>
その場合は、最近の記事を表示するのものいいでしょう。
両方に対応したソースは、githubにあります。
<a href="https://github.com/ko2ic/octopress-qiita-aside">https://github.com/ko2ic/octopress-qiita-aside</a>
なにかあれば、pull requestでもお願いします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mavenですべての設定ファイルを自動生成させる方法]]></title>
    <link href="http://ko2ic.github.io/blog/2014/04/19/maven-eclipse/"/>
    <updated>2014-04-19T20:24:48+09:00</updated>
    <id>http://ko2ic.github.io/blog/2014/04/19/maven-eclipse</id>
    <content type="html"><![CDATA[<p>いまさらmavenです。mavenは、1時代から数えると10年近く(m2コマンドだったときもあるんですよ)使っていますが、今回の記事のようなことはやったことなかったので残しておきます。</p>

<p>maven-eclipse-pluginを使って作成できるのは、プロジェクトのディレクトリに置けるファイル/ディレクトリです。
例えば、<code>.checkstyle</code>であったり、<code>.settings/</code>だったり。
しかし、Eclipseの設定ファイルは、それ以外にも存在します。
例えば、<code>workspace/.metadata/</code>です。</p>

<p>今回は例として、<code>workspace/.metadata/</code>以下にできる「Run Configurations」や「External Tools Configurations」画面で設定できるファイルを生成させます。</p>

<!-- more -->


<p><a name="add"><strong><em>追記(2014/4/21)</em></strong></a> <br/>
<em>eclipseの設定ファイルは<code>.settings/</code>に出来れば問題ありません。
記事を書いたとき、eclipseの仕組みを勘違いしていました。
今回の場合、antrunの処理は必要ありません。
というのも、<code>.settings/</code>以下に置けば、<code>workspace/.metadata</code>に移動させなくても認識するからです。
ちなみに以下が試した結果です。</em> <br/>
.settings/open finder.launch ×<br/>
.settings/.plugins/org.eclipse.debug.core/.launches/open finder.launch ×<br/>
.settings/custom/.metadata/.plugins/org.eclipse.debug.core/.launches/open finder.launch × <br/>
.settings/.metadata/.plugins/org.eclipse.debug.core/.launches/open finder.launch ○</p>

<h2>前提</h2>

<ul>
<li>チーム内で人によってworkspaceのパスが違う。</li>
<li>「Project Explore」で選択したファイルをFinderで開く機能（設定）を全員に設定させたい。</li>
<li>設定するのに時間をかけたくない。</li>
<li>mvn後にExternal Tools Configurationを開くと以下のようになる</li>
</ul>


<p><img src="https://qiita-image-store.s3.amazonaws.com/0/10494/8e24f7ad-c910-bb90-b21e-a029d6f65b70.png" title="openFinder.png" alt="openFinder.png" /></p>

<h2>方法</h2>

<p>1.個々人の~.m2/settings.xmlにworkspaceのパスを記述する</p>

<figure class='code'><figcaption><span>settings.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;profiles&gt;</span>
</span><span class='line'>    <span class="nt">&lt;profile&gt;</span>
</span><span class='line'>      <span class="nt">&lt;id&gt;</span>local<span class="nt">&lt;/id&gt;</span>
</span><span class='line'>      <span class="nt">&lt;activation&gt;</span>
</span><span class='line'>        <span class="nt">&lt;activeByDefault&gt;</span>true<span class="nt">&lt;/activeByDefault&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/activation&gt;</span>
</span><span class='line'>      <span class="nt">&lt;properties&gt;</span>
</span><span class='line'>        <span class="nt">&lt;eclipse.workspace&gt;</span>/Users/hoge/sources/workspace<span class="nt">&lt;/eclipse.workspace&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/properties&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/profile&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/profiles&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>2.maven-eclipse-pluginで、プロジェクトに一時ファイルを作る処理を記述<sub><a href="#add">追記参照</a></sub></p>

<figure class='code'><figcaption><span>pom.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>    <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;artifactId&gt;</span>maven-eclipse-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>      <span class="nt">&lt;additionalConfig&gt;</span>
</span><span class='line'>        <span class="nt">&lt;file&gt;</span>
</span><span class='line'>          <span class="nt">&lt;name&gt;</span>.settings/temp/.metadata/.plugins/org.eclipse.debug.core/.launches/open finder.launch<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>          <span class="nt">&lt;content&gt;</span><span class="cp">&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;launchConfiguration type=&quot;org.eclipse.ui.externaltools.ProgramLaunchConfigurationType&quot;&gt;</span>
</span><span class='line'><span class="cp">&lt;stringAttribute key=&quot;org.eclipse.ui.externaltools.ATTR_LOCATION&quot; value=&quot;/usr/bin/open&quot;/&gt;</span>
</span><span class='line'><span class="cp">&lt;stringAttribute key=&quot;org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS&quot; value=&quot;${container_loc}&quot;/&gt;</span>
</span><span class='line'><span class="cp">&lt;/launchConfiguration&gt;              </span>
</span><span class='line'><span class="cp">]]&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/content&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/file&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/additionalConfig&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/plugin&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.maven-antrun-pluginでプロジェクトの一時パスからworkspaceへ移動させる処理を記述<sub><a href="#add">追記参照</a></sub></p>

<figure class='code'><figcaption><span>pom.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>    <span class="nt">&lt;artifactId&gt;</span>maven-antrun-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;version&gt;</span>1.7<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;dependencies&gt;</span>
</span><span class='line'>      <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>org.apache.ant<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>ant<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;version&gt;</span>1.9.3<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependencies&gt;</span>
</span><span class='line'>    <span class="nt">&lt;executions&gt;</span>
</span><span class='line'>      <span class="nt">&lt;execution&gt;</span>
</span><span class='line'>        <span class="nt">&lt;id&gt;</span>gen-launches<span class="nt">&lt;/id&gt;</span>
</span><span class='line'>        <span class="nt">&lt;phase&gt;</span>process-resources<span class="nt">&lt;/phase&gt;</span>
</span><span class='line'>        <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>          <span class="nt">&lt;target&gt;</span>
</span><span class='line'>            <span class="nt">&lt;mkdir</span> <span class="na">dir=</span><span class="s">&quot;.settings/temp/&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;move</span> <span class="na">todir=</span><span class="s">&quot;${eclipse.workspace}/&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;fileset</span> <span class="na">dir=</span><span class="s">&quot;.settings/temp/&quot;</span> <span class="na">includes=</span><span class="s">&quot;**/*&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/move&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>        <span class="nt">&lt;goals&gt;</span>
</span><span class='line'>          <span class="nt">&lt;goal&gt;</span>run<span class="nt">&lt;/goal&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/goals&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/execution&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/executions&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/plugin&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>4.<code>$ mvn eclipse:eclipse process-resources</code>を叩く</p>

<p>5.完成。プロジェクトを選択して、External Tools で　「open finder」を選択すると実行する。</p>

<p>一度、実行すると以下のように使えます。</p>

<p><img src="https://qiita-image-store.s3.amazonaws.com/0/10494/04dd8f95-7fe0-9179-0f59-7b06066de308.png" title="openFinder2.png" alt="openFinder2.png" /></p>

<h2>まとめ</h2>

<p>今回は、「External Tools Configurations」の設定の自動化をしましたが、この仕組みであれば、ほぼ全ての設定を自動化できます。
当然、mavenのプロパティを&lt;content>タグ内でも使えるので、それぞれの環境依存の設定ファイルも作成可能です。</p>

<p>実際「Run Configurations」でも同じようにできました。
（その場合は、classpathにテストリソースが含まれないようにclassesだけを選択した設定を記述する必要があります。）</p>

<p>これで、wikiなどを書いて、それぞれのチームメンバーに設定してもらうコストが削減できると思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress始めてみた！]]></title>
    <link href="http://ko2ic.github.io/blog/2014/04/15/first-octopress/"/>
    <updated>2014-04-15T19:58:32+09:00</updated>
    <id>http://ko2ic.github.io/blog/2014/04/15/first-octopress</id>
    <content type="html"><![CDATA[<p>初心に帰って技術ブログでも始めようかと。<br/>
<a href="http://qiita.com/ko2ic">Qiita</a>との棲み分けはどうしよう。 <br/>
感想とか自分の考えはこちらに書けばいいけど、技術的な内容はどうしようか。<br/>
ブログと言えども同じ内容を書くのはDRY原則に反するから、悩み中。  <br/>
まあ、でも試しに両方に書いて見ようかな。</p>
]]></content>
  </entry>
  
</feed>
